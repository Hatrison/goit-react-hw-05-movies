{"version":3,"file":"static/js/122.dfe11219.chunk.js","mappings":"+PAqCA,EAjCgB,WACd,OAA8BA,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,qGACGC,EAAAA,EAAAA,GAAS,UAAD,OAAWJ,EAAX,aADX,OACbF,EADa,OAEnBC,EAAWD,EAAQO,SACnBC,QAAQC,IAAIT,EAAQO,SAHD,2CAAH,qDAMlBF,GACD,GAAE,CAACH,KAGF,gCACuB,KAAb,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASU,UACR,+BACGV,QADH,IACGA,OADH,EACGA,EAASW,KAAI,SAAAC,GAAM,OAClB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADE,MAQH,KAAb,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASU,UACR,wEAIP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import getMovie from 'movieAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const reviews = await getMovie(`/movie/${movieId}/reviews`);\n      setReviews(reviews.results);\n      console.log(reviews.results);\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews?.length !== 0 && (\n        <ul>\n          {reviews?.map(review => (\n            <li key={review.id}>\n              <h4>Author: {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews?.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","getMovie","results","console","log","length","map","review","author","content","id"],"sourceRoot":""}